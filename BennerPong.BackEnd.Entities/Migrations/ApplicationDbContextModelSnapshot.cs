// <auto-generated />
using System;
using MatchPoint.BackEnd.GameAPI.DbContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MatchPoint.BackEnd.GameAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("MatchPoint.BackEnd.GameAPI.Models.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("PlayerOneId1")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerOneIdId")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerTwoId1")
                        .HasColumnType("int");

                    b.Property<int?>("PlayerTwoIdId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerOneId1");

                    b.HasIndex("PlayerOneIdId");

                    b.HasIndex("PlayerTwoId1");

                    b.HasIndex("PlayerTwoIdId");

                    b.ToTable("Game");
                });

            modelBuilder.Entity("MatchPoint.BackEnd.GameAPI.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Department")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Player");
                });

            modelBuilder.Entity("MatchPoint.BackEnd.GameAPI.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("MaxPoints")
                        .HasColumnType("int");

                    b.Property<int>("PointsOne")
                        .HasColumnType("int");

                    b.Property<int>("PointsTwo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("Score");
                });

            modelBuilder.Entity("MatchPoint.BackEnd.GameAPI.Models.Game", b =>
                {
                    b.HasOne("MatchPoint.BackEnd.GameAPI.Models.Player", "PlayerOne")
                        .WithMany()
                        .HasForeignKey("PlayerOneId1");

                    b.HasOne("MatchPoint.BackEnd.GameAPI.Models.Player", "PlayerOneId")
                        .WithMany()
                        .HasForeignKey("PlayerOneIdId");

                    b.HasOne("MatchPoint.BackEnd.GameAPI.Models.Player", "PlayerTwo")
                        .WithMany()
                        .HasForeignKey("PlayerTwoId1");

                    b.HasOne("MatchPoint.BackEnd.GameAPI.Models.Player", "PlayerTwoId")
                        .WithMany()
                        .HasForeignKey("PlayerTwoIdId");

                    b.Navigation("PlayerOne");

                    b.Navigation("PlayerOneId");

                    b.Navigation("PlayerTwo");

                    b.Navigation("PlayerTwoId");
                });

            modelBuilder.Entity("MatchPoint.BackEnd.GameAPI.Models.Score", b =>
                {
                    b.HasOne("MatchPoint.BackEnd.GameAPI.Models.Game", "Game")
                        .WithOne("Score")
                        .HasForeignKey("MatchPoint.BackEnd.GameAPI.Models.Score", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("MatchPoint.BackEnd.GameAPI.Models.Game", b =>
                {
                    b.Navigation("Score")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
